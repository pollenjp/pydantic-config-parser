---
name: Release Drafter (autolabeler & check release tag)
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main*
    types:
      - opened
      - reopened
      - synchronize
permissions:
  contents: read
defaults:
  run:
    shell: bash -eux -o pipefail {0}
jobs:
  call_autolabel_workflow:
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/pull_request_release.yml
  check_release_version:
    runs-on: ubuntu-latest
    steps:
      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract package version
        id: package_version
        run: |
          package_version=$(
            PYTHONPATH='src/pydantic_config_parser' \
              python3 -c 'from __about__ import __version__; print(__version__)'
          )
          echo "package_version=${package_version}" >> $GITHUB_OUTPUT
      - name: Check the tag is new and doesn't exist
        run: |
          package_version="${{ steps.package_version.outputs.package_version }}"
          git fetch --tags
          is_found=$(git tag -l "v${package_version}" | wc -l)
          if [[ $is_found -gt 0 ]]; then
            echo "${package_version} tag already exists!" >&2
            exit 1
          fi
